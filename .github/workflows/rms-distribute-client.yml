name: rms-distribute-client

on:
  workflow_dispatch:
    branches: [ main ]
  push:
    branches: [ main ]
    paths: 
      - rms-client-api/**
      - rms-client-api-remote/**
      - rms-client-ui-console/**

jobs:
  build_client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build & Test & Deploy for client
        run: |
          mvn -B -Pcli,client clean deploy --file pom.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}

  distribute_client:
    needs: [build_client]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            type-name: "mac"
          - os: windows-latest
            type-name: "win"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java16
        uses: actions/setup-java@v1
        with:
          java-version: 16 # jpackage required
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Make app-image
        shell: bash
        run: |
          mvn -B -Pcli,copy-libs clean package -DskipTests=true --file pom.xml
          cp ./target/rms-client-ui-console.jar ./target/libs
          APP_NAME=RmsConsole
          MAIN_JAR=rms-client-ui-console.jar
          BUIDL_TYPE=app-image
          JAVA_OPTION=-Dserver.url=https://rms.ext-act.io
          jpackage --name $APP_NAME --input target/libs --main-jar $MAIN_JAR --type $BUIDL_TYPE --java-options $JAVA_OPTION
        working-directory: rms-client-ui-console
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Commit to GitHubPages
        shell: bash
        run: |
          git fetch
          git checkout github-pages
          test ${{ matrix.type-name }} = "win" && 7z a RmsConsoleWin.zip ./rms-client-ui-console/RmsConsole && mv ./RmsConsoleWin.zip ./docs/binary
          test ${{ matrix.type-name }} = "mac" && zip -r RmsConsoleMac.zip ./rms-client-ui-console/RmsConsole.app && mv ./RmsConsoleMac.zip ./docs/binary
          rm -rf ./rms-client-ui-console
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./docs/binary && git diff --cached --exit-code --quiet || git commit -m "Add the rebuild binary" -a
          git pull
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: github-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
